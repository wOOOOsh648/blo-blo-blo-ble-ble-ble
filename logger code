local modem = GetPart("Modem")
local wh = "https://discord.com/api/webhooks/1411397360809938994/vMZ5iBDkDtN1geyYoBN2CKdgUgY0VB56BM7HMFMQVv44NmA4Q-_VsOpo9qDvBpu4T4W-"
local micro = GetPart("Microphone")
local player = require("players")
local teles = GetPart("Telescope")
local life = GetPart("LifeSensor")
local allied = JSONDecode(modem:GetAsync("https://raw.githubusercontent.com/wOOOOsh648/blo-blo-blo-ble-ble-ble/refs/heads/main/test"))
local detecteds = {}
local alliedOrNot = "its still starting up"
local startupmsg = {embeds ={
    {
        title = "server loaded or logger rebooted.. logger starting up",
        description = "the logger is located in (" .. teles:GetCurrentCoordinate().UniverseCoordinates.X .. ", " .. teles:GetCurrentCoordinate().UniverseCoordinates.Y .. ", " .. teles:GetCurrentCoordinate().SolarCoordinates.X .. ", " .. teles:GetCurrentCoordinate().SolarCoordinates.Y .. ") has been loaded please check if the user is safe to stay"
    }
}}
modem:PostAsync(wh, JSONEncode(startupmsg))




micro.Chatted:Connect(function(userid, msg)
    local allied = JSONDecode(modem:GetAsync("https://raw.githubusercontent.com/wOOOOsh648/blo-blo-blo-ble-ble-ble/refs/heads/main/test"))
    if not table.find(allied, player:GetUsername(userid)) then
        alliedOrNot = " logger: this user is not an allied user @everyone"
    elseif table.find(allied, player:GetUsername(userid)) then
        alliedOrNot = " logger: and this user is an allied user"
    end
    local message = {embeds = {
    {
        title = player:GetUsername(userid) .. " said " .. "in " .. teles:GetCurrentCoordinate().UniverseCoordinates.X .. ", " .. teles:GetCurrentCoordinate().UniverseCoordinates.Y .. ", " .. teles:GetCurrentCoordinate().SolarCoordinates.X .. ", " .. teles:GetCurrentCoordinate().SolarCoordinates.Y,
        description = msg .. alliedOrNot
    }
    }}
    modem:PostAsync(wh, JSONEncode(message))
end)

while task.wait(1) do
    local allied = JSONDecode(modem:GetAsync("https://raw.githubusercontent.com/wOOOOsh648/blo-blo-blo-ble-ble-ble/refs/heads/main/test"))
    for _, i in life:ListPlayers() do
        if not table.find(detecteds, i) then
            if not table.find(allied, player:GetUsername(i)) then
                alliedOrNot = "this user is not an allied user @everyone"
            elseif table.find(allied, player:GetUsername(i)) then
                alliedOrNot = "this user is an allied user"
            end
            local update = {embeds = {
                {
                    title = "player joined!",
                    description = player:GetUsername(i) .. " has joined the coordinates " .. teles:GetCurrentCoordinate().UniverseCoordinates.X .. ", " .. teles:GetCurrentCoordinate().UniverseCoordinates.Y .. ", " .. teles:GetCurrentCoordinate().SolarCoordinates.X .. ", " .. teles:GetCurrentCoordinate().SolarCoordinates.Y .. " and " .. alliedOrNot
                }
            }}
            modem:PostAsync(wh, JSONEncode(update))
            table.insert(detecteds, i)
        end
    end
    for _, i in detecteds do
        if not table.find(life:ListPlayers(), i) then
            if not table.find(allied, player:GetUsername(i)) then
                alliedOrNot = "this user is not an allied user @everyone"
            elseif table.find(allied, player:GetUsername(i)) then
                alliedOrNot = "this user is an allied user"
            end
            local update = {embeds = {
                {
                    title = "player left!",
                    description = player:GetUsername(i) .. " has left the coordinates " .. teles:GetCurrentCoordinate().UniverseCoordinates.X .. ", " .. teles:GetCurrentCoordinate().UniverseCoordinates.Y .. ", " .. teles:GetCurrentCoordinate().SolarCoordinates.X .. ", " .. teles:GetCurrentCoordinate().SolarCoordinates.Y .. " and " .. alliedOrNot
                }
            }}
            modem:PostAsync(wh, JSONEncode(update))
            table.remove(detecteds, table.find(detecteds, i))
        end
    end
end
